import com.cloudbees.plugins.credentials.impl.*;
import com.cloudbees.plugins.credentials.*;
import com.cloudbees.plugins.credentials.domains.*;
import org.jenkinsci.plugins.plaincredentials.*
import org.jenkinsci.plugins.plaincredentials.impl.*
import com.cloudbees.plugins.credentials.common.*
import com.cloudbees.jenkins.plugins.sshcredentials.impl.*
import com.cloudbees.jenkins.plugins.awscredentials.AWSCredentialsImpl
import hudson.util.Secret
import jenkins.*
import jenkins.model.*
import hudson.*
import hudson.model.*

domain = Domain.global()
store = Jenkins.instance.getExtensionList('com.cloudbees.plugins.credentials.SystemCredentialsProvider')[0].getStore()

{% if user_password_credentials is defined %}
{% for (key, value) in user_password_credentials.iteritems() %}
{{ key | replace('-', '') }} = new UsernamePasswordCredentialsImpl(
  CredentialsScope.GLOBAL,
  "{{ key }}", // id
  "{{ value.description | default("") }}", // description
  "{{ value.username }}", // username
  "{{ value.password }}" // password
)
store.addCredentials(domain, {{ key | replace('-', '') }})
{% endfor %}
{% endif %}

{% if secret_text_credentials is defined %}
{% for (key, value) in secret_text_credentials.iteritems() %}
{{ key | replace('-', '') }} = new StringCredentialsImpl(
  CredentialsScope.GLOBAL,
  "{{ key }}", // id
  "{{ value.description | default("") }}", // description
  Secret.fromString("{{ value.text }}") // secret
)
store.addCredentials(domain, {{ key | replace('-', '') }})
{% endfor %}
{% endif %}
