import com.cloudbees.plugins.credentials.impl.*;
import com.cloudbees.plugins.credentials.*;
import com.cloudbees.plugins.credentials.domains.*;
import org.jenkinsci.plugins.plaincredentials.*
import org.jenkinsci.plugins.plaincredentials.impl.*
import com.cloudbees.plugins.credentials.common.*
import com.cloudbees.jenkins.plugins.sshcredentials.impl.*
import com.cloudbees.jenkins.plugins.awscredentials.AWSCredentialsImpl
import hudson.util.Secret

domain = Domain.global()
store = Jenkins.instance.getExtensionList('com.cloudbees.plugins.credentials.SystemCredentialsProvider')[0].getStore()

{% for (key, value) in user_password_credentials.iteritems() %}
Credentials {{ key }} = (Credentials) new UsernamePasswordCredentialsImpl(
  CredentialsScope.GLOBAL,
  "{{ key }}", // id
  "{{ value.description | default("") }}", // description
  "{{ value.username }}", // username
  "{{ value.password }}" // password
)
store.addCredentials(domain, {{ key }})
{% endfor %}

{% for (key, value) in secret_text_credentials.iteritems() %}
Credentials {{ key }} = (Credentials) new StringCredentialsImpl(
  CredentialsScope.GLOBAL,
  "{{ key }}", // id
  "{{ value.description | default("") }}", // description
  Secret.fromString("{{ value.text }}") // secret
)
store.addCredentials(domain, {{ key }})
{% endfor %}
